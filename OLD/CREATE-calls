act.informative.c:    RECREATE(GET_TITLE(ch),char,strlen(argument));
act.informative.c:    CREATE(GET_TITLE(ch),char,strlen(argument));
act.obj2.c:  CREATE(new_name,char,strlen(obj->name)+strlen(drinknames[type])+2);
act.social.c:      CREATE(rslt, char, strlen(buf) + 1);
act.social.c:      CREATE(soc_mess_list, struct social_messg, 1);
board.c:  CREATE(ch->desc->title, char, strlen(arg) + 10);
comm.c:  CREATE(new, struct txt_block, 1);
comm.c:  CREATE(new->text, char, strlen(txt) + 1);
comm.c:  CREATE(newd, struct descriptor_data, 1);
db.c:        CREATE(player_table, 
db.c:      CREATE(player_table[nr].name, char,
db.c:          CREATE(index, struct index_data, 1);
db.c:	    CREATE(new_descr, struct extra_descr_data, 1);
db.c:          CREATE(new_descr, struct extra_descr_data, 1);
db.c:    CREATE(new_world, struct room_data, 1);
db.c:  CREATE(world[room].dir_option[dir], 
db.c:				CREATE(zone_table[zon].cmd, struct reset_com, 1);
db.c:			CREATE(zone_table, struct zone_data, 1);
db.c:		CREATE(zone_table[zon].filename,char, strlen(file_name)); /* + 1 for Linux and no +1 for BSD? */
db.c:					CREATE(zone_table[zon].cmd, struct reset_com, 1);
db.c:      CREATE(zone_table, struct zone_data, 1);
db.c:          CREATE(zone_table[zon].cmd, struct reset_com, 1);
db.c:	CREATE(mob, struct char_data, 1);
db.c:	CREATE(mob, struct char_data, 1);
db.c:  CREATE(obj, struct obj_data, 1);
db.c:    CREATE(new_descr, struct extra_descr_data, 1);
db.c:      CREATE(update_u, struct reset_q_element, 1);
db.c:    CREATE(ch->player.title, char, strlen(st->title) + 1);
db.c:    CREATE(ch->player.description, char, 
db.c:  CREATE(GET_NAME(ch), char, strlen(st->name) +1);
db.c:    RECREATE(ch->player.title, char, strlen(st->title) + 1);
db.c:    RECREATE(ch->player.description, char, 
db.c:  RECREATE(GET_NAME(ch), char, strlen(st->name) +1);
db.c:    CREATE(player_table, struct player_index_element, 1);
db.c:  CREATE(player_table[top_of_p_table].name, char , strlen(name) + 1);
db.c:        CREATE(tmp_player_table, struct player_index_element, top_of_p_table);
db.c:    CREATE(rslt, char, strlen(buf) + 1);
fight.c:    CREATE(messages,struct message_type,1);
fight.c:  CREATE(corpse, struct obj_data, 1);
fight.c.old:  CREATE(messages,struct message_type,1);
fight.c.old:	CREATE(corpse, struct obj_data, 1);
handler.c:  CREATE(affected_alloc, struct affected_type, 1);
handler.c:			CREATE(ch->player.short_descr, char, strlen(buf) + 1);
handler.c:			CREATE(ch->player.long_descr, char, strlen(buf) + 1);
handler.c:  CREATE(obj, struct obj_data, 1);
handler.c:  CREATE(new_descr, struct extra_descr_data, 1);
interpreter.c:      CREATE(d->character, struct char_data, 1);
interpreter.c:	CREATE(GET_NAME(d->character), char, strlen(tmp_name) + 1);
limit.c:    RECREATE(GET_TITLE(ch),char,strlen(READ_TITLE(ch))+1);
limit.c:    CREATE(GET_TITLE(ch),char,strlen(READ_TITLE(ch)));
magic2.c:	INCREASE_SKILLED2(ch, ch, SPELL_CREATE_FOOD);
magic2.c:	CREATE(tmp_obj, struct obj_data, 1);
magic2.c:	INCREASE_SKILLED2(ch, ch, SPELL_CREATE_WATER);
magic2.c:	INCREASE_SKILLED2(ch, ch, SPELL_CREATE_NECTAR);
magic2.c:	INCREASE_SKILLED2(ch, ch, SPELL_CREATE_GOLDEN_NECTAR);
magic2.c:	CREATE(victim->player.long_descr, char, strlen(buf) + 1);
magic2.c:	CREATE(victim->player.short_descr, char, strlen(buf) + 1);
magic3.c:		CREATE(tmp_obj, struct obj_data, 1);
mail.c:            CREATE(letter->action_description,char,strlen(buffer+1));
modify.c:    CREATE(*d->str, char, strlen(str) + 3);
modify.c:            CREATE(ed , struct extra_descr_data, 1);
modify.c:            CREATE(ed->keyword, char, strlen(string) + 1);
modify.c:    CREATE(*ch->desc->str, char, strlen(string) + 1);
modify.c:        CREATE(list, struct help_index_element, 1);
modify.c:        RECREATE(list, struct help_index_element, ++nr + 1);
modify.c:      CREATE(list[nr].keyword, char, strlen(tmp) + 1);
modify.c:    CREATE(d->showstr_head, char, strlen(str) + 1);
quest.c:    CREATE(QM[topQM].name, char, size);
quest.c:      CREATE(obj->name, char, strlen(buf1) + 1);
quest.c:      CREATE(obj->short_description, char, strlen(buf1) + 1);
quest.c:      CREATE(obj->name, char, strlen(buf1) + 1);
quest.c:      CREATE(obj->short_description, char, strlen(buf1) + 1);
shop.c:        CREATE(shop_index, struct shop_data, 1);
spec_procs2.c:      CREATE(player_table[i].name, char, strlen(temp) + 1);
spec_procs2.c:      CREATE(ch->player.name, char, strlen(temp) + 1);
spec_procs3.c:	CREATE(obj->short_description, char, strlen(arg) + 1);
spell_parser.c:  CREATE(k, struct follow_type, 1);
